
{
	// Place your snippets for cpp here. 
	//Each snippet is defined under a snippet name and has a prefix, body and 
	// description. 
	//The prefix is what is used to trigger the snippet
	// the body will be expanded and inserted. 
	//Possible variables are: $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
		

	"Default cpp formate": {
		"prefix": [
			"include",
			"default"
		],
		"body": [
			"#pragma GCC optimize (\"trapv\")"
"#include <bits/stdc++.h>",
"#include<algorithm>",
"#include <vector>",
"#include<cstring>",
"#include<cstdlib>",
"#include<cmath>",
"#include<cstdlib>",
"#include<sstream>",
"#include <string.h>",
"using namespace std;",
"#define pb push_back",
"#define all(v) v. begin(),v. end()",
"#define  rep(i,n,v) for(i=n;i<v;i++)",
"#define per(i,n,v) for(i=n;i>v;i--)",
"#define ff first ",
"#define ss second ",
"#define pp pair<ll,ll>",
"#define ll  long long",
"#define ld  long double",
"#define endl \"\\n\""\" ",
"const ll mod=1e9+7;",
"void solve()",
"{",
 "ll  n, a=0,b=0,m=1, c=-1,k=0, i=0, j=0, l=1e9+5;",
  "string s,p, q;",
   
"}",
"int main()",
"{",
 "ios_base::sync_with_stdio(false);",
  "cin. tie(0);cout. tie(0);",
    "ll t=1;",
  "cin>>t;",
    "while(t--)",
    "{",
      "solve();",
    "}",
    "return 0;",
"}",
		
		],
		"description": "This is a c++ sniffpet",
		
	},
	"for loop":{
		"prefix": "forl",
		"body": ["for($1 $2 = $3 ; $2 < $4 ; $2++)","{","	${0:/* code */}","}"],
		"description": "For Loop"
	}
}